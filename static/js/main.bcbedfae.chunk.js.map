{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","CreateTodoButton/index.js","TodoCounter/index.js","TodoItem/index.js","TodoList/index.js","TodoSearch/index.js","Modal/index.js","TodoForm/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","createContext","TodoProvider","children","itemName","initialValue","useState","loading","setLoading","error","setError","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","newTodos","findIndex","deleteTodo","todoIndex","splice","addTodo","push","CreateTodoButton","className","onClick","prevState","TodoCounter","useContext","TodoItem","onComplete","onDelete","TodoList","TodoSearch","placeholder","onChange","event","target","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","rows","type","AppUI","map","key","App","render"],"mappings":"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","file":"static/js/main.bcbedfae.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\nimport { useLocalStorage } from './useLocalStorage'\n\nconst TodoContext = createContext();\n\nfunction TodoProvider({ children }) {\n\n    const { item: todos, saveItem: saveTodos, loading, error } = useLocalStorage('TODOS_V1', [],);\n    const [searchValue, setSearchValue] = useState('');\n    const [openModal, setOpenModal] = useState(false);\n\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = [];\n\n    if (!searchValue.length >= 1) {\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter(todo => {\n            const todoText = todo.text.toLowerCase();\n            const searchText = searchValue.toLowerCase();\n            return todoText.includes(searchText);\n        });\n    }\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n\n        newTodos.push(\n            {\n                completed: false,\n                text: text\n            }\n        );\n        saveTodos(newTodos);\n    }\n\n    const completeTodo = (text) => {\n        const newTodos = [...todos];\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        newTodos[todoIndex].completed = true;\n        saveTodos(newTodos);\n    }\n\n    const deleteTodo = (text) => {\n        const newTodos = [...todos];\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    }\n\n    return (\n        <TodoContext.Provider value={{\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n            loading,\n            error,\n            openModal,\n            setOpenModal,\n            addTodo\n        }}>\n            {children}\n        </TodoContext.Provider>\n    )\n}\n\nexport { TodoContext, TodoProvider };","import { useState, useEffect } from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n    const [item, setItem] = useState(initialValue);\n\n    useEffect(() => {\n        setTimeout(() => {\n            try {\n\n                const localStorageItem = localStorage.getItem(itemName);\n                let parsedItem;\n\n                if (!localStorageItem) {\n                    parsedItem = initialValue;\n                    localStorage.setItem(itemName, JSON.stringify(parsedItem));\n                }\n                else {\n                    parsedItem = JSON.parse(localStorageItem);\n                }\n\n                setItem(parsedItem);\n                setLoading(false);\n\n            } catch (error) {\n                setError(error);\n            }\n        }, 1000);\n    })\n\n    const saveItem = (newItem) => {\n        try {\n            const stringifiedItem = JSON.stringify(newItem);\n            localStorage.setItem(itemName, stringifiedItem);\n            setItem(newItem);\n        } catch (error) {\n            setError(error);\n        }\n\n    }\n\n    return { item, saveItem, loading, error };\n}\n\nexport { useLocalStorage };","import React from 'react'\nimport './CreateTodoButton.css'\n\nexport const CreateTodoButton = ({setOpenModal}) => {\n\n    const onClickButton =()=>{\n        setOpenModal(prevState=> !prevState);\n    }\n\n    return (\n        <button \n            className=\"CreateTodoButton\"\n            onClick={onClickButton}\n        >\n            +\n        </button>\n    );\n}\n","import React, { useContext } from 'react';\nimport { TodoContext } from \"../TodoContext\";\nimport './TodoCounter.css'\n\nconst TodoCounter = () => {\n\n    const { totalTodos , completedTodos } = useContext(TodoContext);\n    return (\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n    )\n}\n\nexport { TodoCounter };\n","import React from 'react';\nimport './TodoItem.css';\n\nexport const TodoItem = ({text, completed, onComplete, onDelete}) => {\n\n    return (\n        <li className=\"TodoItem\">\n            <span \n                className={`TodoItem-icon ${completed && 'TodoItem-icon-active'}`}\n                onClick={onComplete}\n            >✔</span>\n            <p className={`TodoItem-p ${completed && 'TodoItem-p-complete'}`}>{text}</p>\n            <span\n                className=\"TodoItem-icon TodoItem-icon-delete\"\n                onClick={onDelete}\n            >\n                ✘\n            </span>\n        </li>\n    );\n}\n","import React from 'react'\n\nexport const TodoList = ({ children }) => {\n    return (\n        <section>\n            <ul>\n                {children}\n            </ul>\n        </section>\n    );\n}\n","import React, { useContext } from 'react';\nimport { TodoContext } from \"../TodoContext\";\nimport './TodoSearch.css'\n\nexport const TodoSearch = () => {\n\n    const { searchValue, setSearchValue } = useContext(TodoContext);\n\n    const onSearchValueChange = (event) => {\n        setSearchValue(event.target.value);\n    }\n\n    return (\n        <input\n            className=\"TodoSearch\"\n            placeholder=\"Buscar Todo\"\n            value={searchValue}\n            onChange={onSearchValueChange}\n        />\n    )\n}\n","import ReactDOM from 'react-dom';\nimport './Modal.css'\n\nfunction Modal({ children }) {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    );\n}\n\nexport { Modal }\n","import React, { useContext, useState } from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoForm.css';\n\nconst TodoForm = () => {\n\n    const { addTodo, setOpenModal } = useContext(TodoContext);\n\n    const [newTodoValue, setNewTodoValue] = useState('');\n\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    }\n\n    const onCancel = () => {\n        setOpenModal(false);\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <label>Escribe tu nuevo TODO</label>\n            <textarea\n                placeholder=\"Mensaje del TODO\"\n                onChange={onChange}\n                value={newTodoValue}\n                rows={5}\n            />\n            <div className=\"TodoForm-button-container\">\n                <button\n                    className=\"TodoForm-button\"\n                    type=\"button\"\n                    onClick={onCancel}\n                >\n                    Cancelar\n                </button>\n                <button\n                    className=\"TodoForm-button TodoForm-button-add\"\n                    type=\"submit\"\n                >Añadir</button>\n            </div>\n        </form>\n    )\n}\n\nexport { TodoForm }\n\n","import React, { useContext } from 'react';\nimport { CreateTodoButton } from \"../CreateTodoButton\";\nimport { TodoCounter } from \"../TodoCounter\";\nimport { TodoItem } from \"../TodoItem\";\nimport { TodoList } from \"../TodoList\";\nimport { TodoSearch } from \"../TodoSearch\";\nimport { TodoContext } from \"../TodoContext\";\nimport { Modal } from \"../Modal\";\nimport { TodoForm } from \"../TodoForm\";\nimport './App.css';\n\n\nconst AppUI = () => {\n\n    const {\n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal\n    } = useContext(TodoContext);\n\n    return (\n        <main className=\"root\">\n            <TodoCounter />\n            <TodoSearch />\n            <TodoList>\n                {loading && <p className=\"AppUI-TodoList-p\">Cargando..</p>}\n                {error && <p className=\"AppUI-TodoList-p\">Ha ocurrido un error</p>}\n                {(!loading && !searchedTodos.length) && <p className=\"AppUI-TodoList-p\">Crea tu primer TODO</p>}\n                {\n                    searchedTodos.map((todo, key) => (\n                        <TodoItem key={key}\n                            text={todo.text}\n                            completed={todo.completed}\n                            onComplete={() => completeTodo(todo.text)}\n                            onDelete={() => deleteTodo(todo.text)}\n                        />\n                    ))\n                }\n            </TodoList>\n\n            <CreateTodoButton\n                setOpenModal={setOpenModal}\n            />\n            {\n                !!openModal && (\n                    <Modal>\n                        <TodoForm />\n                    </Modal>\n                )\n            }\n\n        </main>\n    );\n}\n\nexport { AppUI }","import { TodoProvider } from '../TodoContext';\nimport { AppUI } from './AppUI'\n\n\nfunction App() {\n\n  return (\n    <TodoProvider>\n      <AppUI/>\n    </TodoProvider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}